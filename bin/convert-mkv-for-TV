#!/bin/sh -x

#==============================================================#
# Define                                                       #
#==============================================================#

# echo色付け
EC_RN="\033[0;31m"   # echoの修飾 : Red
EC_RU="\033[4;31m"   # echoの修飾 : Red/Underscore(下線)
EC_GN="\033[0;32m"   # echoの修飾 : Green
EC_GU="\033[4;32m"   # echoの修飾 : Green/Underscore(下線)
EC_END="\033[0;39m"  # echoの修飾 : 適用解除

# 本スクリプトの名前
sh_name=`basename $0`

#==============================================================#
# Function name : usage_func                                   #
#==============================================================#

usage_func(){
    # メニュー表示
    echo    ""
    echo    "encoding for this script: UTF-8"
    echo    "==========================================================="
    echo    "Usage:"
    echo    "  カレントディレクトリにあるmkvファイルの音声データを"
    echo    "  synologyで再生できるように、dts audioからmp3に変換します。"
    echo    "  あとTVで表示できるように字幕もpgsからvobsubに変換します。"
    echo    "  変換語のファイルは、ファイル名に\"_mp3\"を付与しますので、"
    echo    "  \"mp3\"がファイル名に含まれているmkvファイルは変換対象外です。"
    echo    "    ${EC_GN}$sh_name${EC_END}"
    echo    "==========================================================="
    echo    ""
}


#==============================================================#
# Main                                                         #
#==============================================================#

# パラメータ数チェック

if [ $# -ne 0 ]; then
    usage_func
    exit 1
fi

# 第1パラメータチェック
if [ ! -e $path ]; then
    echo "Error : $1 not found."
    exit 1
fi

mkvs=`ls -1 ./ | grep "\.mkv" | sed "s|\.mkv||"`
#mkvs=`ls -1 ./ | grep "t00\.mkv" | sed "s|\.mkv||"`
#mkvs=`ls -1 ./ | grep "\.mkv" | grep -e "t00" -e "t01" -e "t02" -e "t03" | sed "s|\.mkv||"`

set +x #デバッグ出力終了
echo    "==========================================================="
echo    "以下のmkvファイルを変換します。"
for mkv in ${mkvs}; do
  echo " ${EC_GN}  ${mkv} ${EC_END}"
done
echo    "==========================================================="
set -x #デバッグ出力開始

work="convert_work"
if [ ! -d $work ]; then
    mkdir -p $work
fi

for mkv in ${mkvs}; do
    if [ -f ${work}/${mkv}_mp3_vobsub.mkv ]; then
        echo "${EC_GN}skipped ${mkv}.mkv as it was already converted${EC_END}"
        continue
    fi

    # dts audio -> mp3
    if [ ! -f ${work}/${mkv}_mp3.mkv ]; then
        ffmpeg -i "${mkv}.mkv" -c:v copy -c:a mp3 -c:s copy "${work}/${mkv}_mp3.mkv"
        if [ $? -ne 0 ]; then
            echo "Error : ffmepg failed to ${mkv}.mkv..."
            exit 1
        fi
    fi

    # extract subtitles in pgs format
    mkv="$work/${mkv}_mp3"
    sub_track=`mkvinfo ${mkv}.mkv | grep -B6 subtitles| head -1 | cut -d' ' -f 6`
    sub_track=`expr ${sub_track} - 1`
    if [ -z $sub_track ];then
        echo "${EC_GN}skipped ${mkv}_mp3.mkv as it has no subtitle${EC_END}"
        continue
    fi
    mkvextract tracks ${mkv}.mkv ${sub_track}:${mkv}_pgs.sup
    if [ $? -ne 0 ]; then
        echo "Error : mkvextract failed to ${mkv}.mkv..."
        exit 1
    fi

    # pgs -> vobsub
    java -jar ~/bin/BDSup2Sub512.jar -o "${mkv}_vobsub.idx" "${mkv}_pgs.sup"
    if [ $? -ne 0 ]; then
        echo "Error : java command failed to ${mkv}.mkv..."
        exit 1
    fi

    # merge vobsub into mkv
    mkvmerge -o "${mkv}_vobsub.mkv" "${mkv}.mkv" "${mkv}_vobsub.idx"
    if [ $? -ne 0 ]; then
        echo "Error : mkvmerge failed to ${mkv}.mkv..."
        exit 1
    fi

    mv "${mkv}.mkv" "${mkv}.mkv.tmp"
done

set +x #デバッグ出力終了
echo    "==========================================================="
echo    "以下のmkvファイルのdts audioをmp3に変換しました。"
for mkv in ${mkvs}; do
  echo " ${EC_GN}  ${mkv}$ --> ${work}/${mkv}_voidsub.mkv ${EC_END}"
done
echo    "==========================================================="

exit 0

